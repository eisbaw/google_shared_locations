var nodemailer = require('nodemailer');

var Mailer = function(settings) {
    this.settings = settings;
}

Mailer.prototype.send = function(sbj, text, h){
    var self = this;

    // create reusable transport method (opens pool of SMTP connections)
    var smtpTransport = nodemailer.createTransport("SMTP", self.settings.transport);

    // setup e-mail data with unicode symbols
    var mailOptions = self.settings.options;

    mailOptions.subject = self.settings.title + sbj;
    mailOptions.text = '';
    mailOptions.html = text;

    var t;
    try{
        t = JSON.stringify(text, null, 2);
    } catch(ce){
        t = require('util').inspect(text, true, 50);
    }

    mailOptions.html = '';
    mailOptions.text = t;

    // send mail with defined transport object
    smtpTransport.sendMail(mailOptions, function(e,o){
        // if you don't want to use this transport object anymore, uncomment following line
        smtpTransport.close(); // shut down the connection pool, no more messages

        if(h) h(e,o);
    });
}

Mailer.prototype.debug = function(sbj, obj, h){
    var self = this;

    // create reusable transport method (opens pool of SMTP connections)
    var smtpTransport = nodemailer.createTransport("SMTP", self.settings.transport);

    // setup e-mail data with unicode symbols
    var mailOptions = self.settings.options;

    mailOptions.subject = self.settings.title + sbj;

    var t;
    try{
        t = JSON.stringify(obj, null, 2);
    } catch(ce){
        t = require('util').inspect(obj, true, 50);
    }

    mailOptions.html = '';
    mailOptions.text = t;

    // send mail with defined transport object
    smtpTransport.sendMail(mailOptions, function(e,o){
        // if you don't want to use this transport object anymore, uncomment following line
        smtpTransport.close(); // shut down the connection pool, no more messages

        if(h) h(e,o);
    });
}

module.exports = Mailer;
